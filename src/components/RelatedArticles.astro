---
import { getCollection } from 'astro:content';
import { site } from '../data/config.json';
const { currentTitle, tags } = Astro.props;
let posts = await getCollection('posts').then((posts) =>
  tags
    .map((tag) =>
      posts.filter(
        (post) =>
          post.data.tags.includes(tag) &&
          post.data.title !== currentTitle
      )
    )
    .reverse()
    .flat()
    .slice(0, 6)
);

posts = [...new Set(posts)];
---

<div class="block-container">
  <div class="divider">
    <h2 class="text--size-md text--base text--nowrap">
      <span class="mx-3">Suggested Reading</span>
    </h2>
  </div>
</div>
<div class="block-container blocks lg-tablet-up-2 laptop-up-3 p-1">
  {
    posts.map((post) => (
      <div class="block">
        <div class="card h-100 pos-rel border--color-light p-0 overflow-hidden">
          <figure class="image">
            {post.data.image ? (
              <img src={post.data.image} alt={post.data.title} />
            ) : (
              <img src={site.default_image} alt={post.data.title} />
            )}
          </figure>
          <div class="flex flex--justify-between flex--column">
            <h3 class="text--size-base m-0 px-2 pt-3 pb-6">
              <a href={post.slug}>{post.data.title}</a>
            </h3>
            <div class="flex pos-abs pin-bottom flex--wrap p-2">
              {post.data.tags.slice(0, 3).map((tag) => (
                <a
                  href={`/tags/#${tag}`}
                  class="pill border border--color-orange text--orange mr-1 mb-1"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
    ))
  }
</div>

<style lang="scss">
  figure.image {
    height: 125px;
    width: 100%;
    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
      object-position: center;
      filter: grayscale(1);
      transition: filter 0.2s ease;
    }
  }
  .card {
    a {
      &::before {
        content: '';
        inset: 0;
        position: absolute;
      }
    }

    &:hover {
      figure.image {
        img {
          filter: grayscale(0);
        }
      }
    }
  }
</style>
