---
import { getCollection } from 'astro:content';
import { DateTime } from 'luxon';
const { date, authors, tags } = Astro.props;

const postDate = DateTime.fromMillis(Date.parse(date)).toFormat(
  'LLLL dd, yyyy'
);

const authorCollection = await getCollection('authors');
const postAuthors = authors
  .map((author) => authorCollection.filter((a) => a.data.name == author))
  .flat();
---

<div class="block-container">
  <div class="divider">
    <h2 class="text--size-md text--base text--nowrap">
      <span class="mx-3">Published {postDate} by</span>
    </h2>
  </div>
</div>
<div class="flex flex--wrap flex--justify-center" style="gap: 1rem;">
  {
    postAuthors.map((author) => (
      <div class="card no-border flex" style="gap: 0.5rem;">
        {author.data.avatar ? (
          <div class="image--round-small" style="width: 50px;">
            <img
              src={author.data.avatar}
              alt={`${author.data.author} avatar`}
            />
          </div>
        ) : null}
        <div>
          <span class="flex flex--align-center">
            <a class="text--nowrap" href={author.slug}>
              {author.data.name}
            </a>
            <span class="ml-2 pl-2 border-l border--color-light text--nowrap">
              {author.data.github ? (
                <a href={`https://www.github.com/${author.data.github}`}>
                  Github
                </a>
              ) : null}
              {author.data.twitter ? (
                <a
                  href={`https://www.twitter.com/${author.data.twitter}`}
                >
                  Twitter
                </a>
              ) : null}
            </span>
          </span>
          <span>{author.data.title}</span>
        </div>
      </div>
    ))
  }
</div>
<div class="flex flex--justify-center" style="gap:0.5rem">
  {
    tags.map((tag) => (
      <a
        class="pill border--color-orange text--orange mr-1 mb-1"
        href={`/tags/#${tag}`}
      >
        {tag}
      </a>
    ))
  }
</div>
